import fs from 'fs'
import path from 'path'
import data from '../data/index.js'
import msg from '../log.js'

/*
  Used to verify if a file exists in a certain path. If it does, then a new
  filename is generated by appending an incremental number at the end.
  If the file path doesn't exist then the original filename is returned
  without changes. We use this to deal with images that have the same name and date
  but may be different
*/
function generateFilename(filename) {
  var generatedFilename = filename
  var number = 2
  const directory = path.dirname(filename)
  const basename = path.basename(filename)
  const extension = path.extname(filename)
  while (fs.existsSync(generatedFilename)) {
    generatedFilename = `${directory}/${basename} (${number})${extension}`
    number += 1
  }
  return generatedFilename
}
  
export default {

  /*
    Used to move media from the original temp directory to its final
    destination in the media tree
  */
  relocateMedia: async (media, tempMediaPath) => {
      const fullPath = await data.getFileFullPath(media.id)
      const finalMediaPath = generateFilename(fullPath)
      const mediaPath = path.dirname(finalMediaPath)
      if (!fs.existsSync(mediaPath)) {
        fs.mkdirSync(mediaPath, { recursive: true })
      } 
      msg.dbg(`Moving ${tempMediaPath} to ${finalMediaPath}`)
      await fs.promises.rename(tempMediaPath, finalMediaPath)
      if (tempMediaPath != finalMediaPath) {
        await data.setFileName(media.id, path.basename(finalMediaPath))
      }
      return finalMediaPath
    }

}